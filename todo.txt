TODO
form validation
run minimum tests when site accessed
decomission encryption / decryption if cancelled
one of each button
make multiple currencies logo smaller
error/pass/warn logos not loaded if internet disconnects
internet disconnect is not critical bug after dependencies are loaded in tab
show passphrase should not focus passphrase input
recover pulldown disabled styling improvements
recover warnings closeable
"File is not a zip or json file" reword
widen number input
stress tests
check licenses of dependencies
todos throughout code
another attempt at debugging bitaddress bip38 memory leak?
performance of export generating keys to rendering, also affects file import
unecessary environment request when app starts polling

import/export design
homepage
faq
pgp

design:
copyright (?) and disclaimer
warn if private key not included in print - alert when print clicked without show private keys?
option to split the passphrase and include a copy of it on each share
export controller progress design, initial and re-render
import / decryption complete - click button to view
add all button on form
start over button on form
environment checks: app header, disable recover, disable generate, show info bar on form and export
print progress
light blue slider
tip address
select a currency or default to first?
homepage scale too big on small screens?
ability to re-hide more currencies on home?
ability to encrypt / decrypt on export page?
use rounded or square qr code for split form?
code review
loading screen when file imported

low priority:
save as txt and csv
pieces are blank until rendered, loading screen?
double click cryptostorage.html opens page in browser
wait for images before loading homepage
try all imported file / key combinations to recover
prevent scroll revealing some of next picture
copy line break in pdf inserts space
console warning "unexpected end of file" in firefox caused by ddslick
timeouts in tests so browser doesn't lock
csv import to support "bring your own keys"
optimize tests by getting one set of keys of repeat_long size
verify no name collisions
code scan
minimize initial dependencies: condense files to single files, lazy load css
de-allocate elements on page re-renders
decomission export render when new render invoked

consult designers
opinion on donate page + ui designer tip address - link to open user's wallet
error messages on key generation page - let them click button once, outline with red, deactivate until they fix.  Constrain split input and keep in sync
disable generate button until input valid? - let them click once then disable until error corrected
color of generate buttons / pulsing? - form button same as home page, maybe shift to darker
slider points, logos, and supporting content - fill icons with white, multiple locks
BIP38 vs CryptoJS encryption option for BTC/BCH - checkbox on same line as "Show passphrase", "Use BIP38 for Bitcoin and Bitcoin Cash"